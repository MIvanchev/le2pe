#
# Copyright (C) 2024-present Mihail Ivanchev
#
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT.
#

CPU_TYPE_MAP = {
    0x01: "Intel 80286 or upwardly compatible",
    0x02: "Intel 80386 or upwardly compatible",
    0x03: "Intel 80486 or upwardly compatible",
    0x04: "Intel 80586 or upwardly compatible",
    0x20: "Intel i860 (N10) or compatible",
    0x21: 'Intel "N11" or compatible',
    0x40: "MIPS Mark I ( R2000, R3000) or compatible",
    0x41: "MIPS Mark II ( R6000 ) or compatible",
    0x42: "MIPS Mark III ( R4000 ) or compatible",
}

OS_TYPE_MAP = {0x01: "OS/2", 0x02: "Windows", 0x03: "DOS 4.x", 0x04: "Windows 386"}

OBJF_READABLE = 0x0001
OBJF_WRITEABLE = 0x0002
OBJF_EXECUTABLE = 0x0004
OBJF_RESOURCE = 0x0008
OBJF_DISCARDABLE = 0x0010
OBJF_SHARED = 0x0020
OBJF_HAS_PRELOADABLE_PAGES = 0x0040
OBJF_HAS_INVALID_PAGES = 0x0080
OBJF_RESERVED = 0x0800
OBJF_16_16_ALIAS_REQUIRED = 0x1000
OBJF_BIG = 0x2000
OBJF_CONFORMING = 0x4000
OBJF_IO_PRIVILEGE_LEVEL = 0x8000
OBJF_RESIDENT_AND_LONG_LOCKABLE = 0x0400

OBJ_TYPE_MASK = 0x0300
OBJ_TYPE_NORMAL = 0x0000
OBJ_TYPE_HAS_ZF_PAGES = 0x0100
OBJ_TYPE_RESIDENT = 0x0200
OBJ_TYPE_RESIDENT_AND_CONTIGUOUS = 0x0300

OBJECT_FLAGS_MAP = {
    0x0001: "OBJF_READABLE",
    0x0002: "OBJF_WRITEABLE",
    0x0004: "OBJF_EXECUTABLE",
    0x0008: "OBJF_RESOURCE",
    0x0010: "OBJF_DISCARDABLE",
    0x0020: "OBJF_SHARED",
    0x0040: "OBJF_HAS_PRELOADABLE_PAGES",
    0x0080: "OBJF_HAS_INVALID_PAGES",
    0x0800: "OBJF_RESERVED",
    0x1000: "OBJF_16_16_ALIAS_REQUIRED",
    0x2000: "OBJF_BIG",
    0x4000: "OBJF_CONFORMING",
    0x8000: "OBJF_IO_PRIVILEGE_LEVEL",
    0x0400: "OBJF_RESIDENT_AND_LONG_LOCKABLE",
}

OBJECT_TYPE_MAP = {
    0x0000: "OBJ_TYPE_NORMAL",
    0x0100: "OBJ_TYPE_HAS_ZF_PAGES",
    0x0200: "OBJ_TYPE_RESIDENT",
    0x0300: "OBJ_TYPE_RESIDENT_AND_CONTIGUOUS",
}

PAGE_VALID = 0
PAGE_ITERATED = 1
PAGE_INVALID = 2
PAGE_ZEROED = 3
PAGE_RANGE = 4

PAGE_FLAGS_MAP = {
    0: "PAGE_VALID",
    1: "PAGE_ITERATED",
    2: "PAGE_INVALID",
    3: "PAGE_ZEROED",
    4: "PAGE_RANGE",
}

FSRCF_BYTE_OFFS = 0x00
FSRCF_UNDEFINED_1 = 0x01
FSRCF_WORD_SEG = 0x02
FSRCF_16_16_PTR = 0x03
FSRCF_UNDEFINED_2 = 0x04
FSRCF_16_BIT_OFFS = 0x05
FSRCF_16_32_PTR = 0x06
FSRCF_32_BIT_OFFS = 0x07
FSRCF_32_BIT_SELF_REL_OFFS = 0x08
FSRCF_FIXUP_TO_ALIAS = 0x10
FSRFC_SOURCE_LIST = 0x20

FIXUP_TGT_TYPE_MASK = 0x03
FIXUP_TGT_INTERNAL = 0x00
FIXUP_TGT_IMP_ORD = 0x01
FIXUP_TGT_IMP_NAME = 0x02
FIXUP_TGT_IMP_ENTRY = 0x03

FTGTF_ADDITIVE = 0x04
FTGTF_CHAIN = 0x08
FTGTF_32_BIT_OFFS = 0x10
FTGTF_32_BIT_ADDITIVE = 0x20
FTGTF_16_BIT_OBJ_MOD_ORD = 0x40
FTGTF_8_BIT_ORD = 0x80

FIXUP_SOURCE_MAP = {
    0x00: "FSRCF_BYTE_OFFS",
    0x01: "FSRCF_UNDEFINED_1",
    0x02: "FSRCF_WORD_SEG",
    0x03: "FSRCF_16_16_PTR",
    0x04: "FSRCF_UNDEFINED_2",
    0x05: "FSRCF_16_BIT_OFFS",
    0x06: "FSRCF_16_32_PTR",
    0x07: "FSRCF_32_BIT_OFFS",
    0x08: "FSRCF_32_BIT_SELF_REL_OFFS",
    0x10: "FSRCF_FIXUP_TO_ALIAS",
    0x20: "FSRFC_SOURCE_LIST",
}

FIXUP_TARGET_TYPE_MAP = {
    0x00: "FIXUP_TGT_INTERNAL",
    0x01: "FIXUP_TGT_IMP_ORD",
    0x02: "FIXUP_TGT_IMP_NAME",
    0x03: "FIXUP_TGT_IMP_ENTRY",
}

FIXUP_FLAGS_MAP = {
    0x04: "FTGTF_ADDITIVE",
    0x08: "FTGTF_CHAIN",
    0x10: "FTGTF_32_BIT_OFFS",
    0x20: "FTGTF_32_BIT_ADDITIVE",
    0x40: "FTGTF_16_BIT_OBJ_MOD_ORD",
    0x80: "FTGTF_8_BIT_ORD",
}
